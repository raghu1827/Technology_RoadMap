
### **1. JavaScript Introduction**
   - Definition of JavaScript
   - Static vs Dynamic Language
   - How JavaScript Works

### **2. Variables**
   - `var`, `let`, `const`
   - Variable Declaration & Initialization
   - Hoisting with Variables

### **3. Data Types**
   - **Primitive Types:**  
     - String, Number, Boolean, Null, Undefined, Symbol, BigInt
   - **Non-Primitive Types:**  
     - Objects, Arrays
   - Type Checking: `typeof`, `instanceof`
   - Type Coercion & Conversion
   - Truthy & Falsy Values
   - Pass by Value vs Pass by Reference
   - Value Types vs Reference Types
   - Handling Data Assignment & Mutation

### **4. Operators**
   - Arithmetic Operators
   - Assignment Operators
   - Comparison Operators
   - Logical Operators
   - Ternary Operator
   - Bitwise Operators
   - Short-circuit Evaluation

### **5. Functions**
   - Function Declaration vs Function Expression
   - Arrow Functions
   - Function Parameters (Rest, Default)
   - Function Return Values
   - Anonymous Functions
   - Immediately Invoked Function Expression (IIFE)
   - Callback Functions (Synchronous, Asynchronous)

### **6. Scopes**
   - Global Scope
   - Local Scope
   - Function Scope
   - Block Scope (`let`, `const`)
   - Lexical Scope & Closures

### **7. Conditional Statements & Loops**
   - `if`, `else if`, `else`
   - Switch Statement
   - `for`, `while`, `do while` loops
   - `for...in` loop
   - `for...of` loop
   - `break` and `continue` statements

### **8. Arrays & Array Methods**
   - Array Basics
   - Common Array Methods:  
     - `push()`, `pop()`, `shift()`, `unshift()`, `splice()`, `slice()`, `concat()`, `indexOf()`, `includes()`, `join()`
   - Iteration Methods:  
     - `map()`, `filter()`, `reduce()`, `forEach()`, `find()`, `some()`, `every()`
   - Sorting and Reversing Arrays: `sort()`, `reverse()`

### **9. Strings & String Methods**
   - String Basics
   - String Methods:  
     - `charAt()`, `concat()`, `includes()`, `indexOf()`, `slice()`, `substring()`, `toLowerCase()`, `toUpperCase()`, `split()`, `replace()`, `trim()`

### **10. Numbers (Math)**
   - Number Basics
   - Math Methods:  
     - `round()`, `ceil()`, `floor()`, `max()`, `min()`, `random()`, `pow()`, `same()`

### **11. Objects and Object Methods**
   - Object Basics (Key-Value Pairs)
   - Object Methods:  
     - `Object.keys()`, `Object.values()`, `Object.freeze()`, `Object.seal()`
   - Accessing Object Properties (Dot & Bracket Notation)
   - Shallow vs Deep Copy
   - Nested Objects

### **12. Object-Oriented Programming (OOP)**
   - Classes & Constructors
   - Inheritance (`extends`, `super`)
   - Encapsulation (Getters & Setters)
   - Polymorphism
   - Abstraction
   - Symbols and Special Characters

### **13. DOM Manipulation**
   - **Selecting DOM Elements:**  
     - `getElementById()`, `getElementsByClassName()`, `getElementsByTagName()`, `querySelector()`, `querySelectorAll()`
   - **Modifying Elements:**  
     - `textContent`, `innerHTML`, `outerHTML`, `style`
   - **Creating and Removing Elements:**  
     - `createElement()`, `appendChild()`, `removeChild()`, `remove()`, `insertBefore()`, `replaceChild()`
   - **Event Listeners:**  
     - `addEventListener()`, `removeEventListener()`
   - **DOM Traversal:**  
     - `parentNode`, `childNodes`, `children`, `firstChild`, `lastChild`, `nextSibling`, `previousSibling`
   - **Attributes:**  
     - `getAttribute()`, `setAttribute()`, `removeAttribute()`
   - **Event Handling:**  
     - Event Bubbling and Capturing
     - Event Delegation
     - `preventDefault()`, `stopPropagation()`

### **14. Asynchronous JavaScript**
   - `setTimeout()`, `setInterval()`
   - Callback Hell
   - Promises (`resolve()`, `reject()`, `then()`, `catch()`, `finally()`)
   - `async` / `await`
   - Fetch API Basics
   - AJAX (Asynchronous JavaScript and XML)
   - Event Loop
   - Task Queue & Microtask Queue
   - Call Stack
   - Stack Execution Model
   - Stack Overflow

### **15. ES6 and Modern JavaScript**
   - Template Literals
   - Destructuring
   - Rest & Spread Operators
   - ES6 Classes & Private Fields
   - Modules (`import` / `export`)
   - Iterators and Generators

### **16. Advanced JavaScript**
   - Prototypes & Prototypal Inheritance
   - Context (`this`)
   - Execution Context and Hoisting
   - `'use strict'`
   - Function Composition
   - Pure Functions
   - Immutability
   - Recursion
   - Context (this): `call()`, `apply()`, `bind()` Methods

### **17. Data Structures in JavaScript**
   - Map & WeakMap
   - Set & WeakSet
   - Arrays (Stack, Queue)

### **18. Exception Handling**
   - `try`, `catch`, `finally`
   - `throw` statement
   - Error Objects
   - Custom Errors

### **19. JSON**
   - JSON Syntax
   - JSON Parsing (`JSON.parse()`)
   - JSON Stringifying (`JSON.stringify()`)

### **20. Design Patterns**
   - Module Pattern
   - Singleton Pattern
   - Observer Pattern
   - Factory Pattern
